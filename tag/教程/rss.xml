<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Amos Yun的笔记空间 • Posts by &#34;教程&#34; tag</title>
        <link>https://yun2060.github.io</link>
        <description>欢迎来到Amos Yun的笔记空间😏在这里，你可以阅读我的学习笔记并提出独到的见解🤩欢迎互相交流学习知识，共同进步🎉</description>
        <language>zh-CN</language>
        <pubDate>Wed, 24 Jan 2024 21:53:54 +0800</pubDate>
        <lastBuildDate>Wed, 24 Jan 2024 21:53:54 +0800</lastBuildDate>
        <category>数据结构</category>
        <category>hexo</category>
        <category>Hexo</category>
        <category>教程</category>
        <category>waline</category>
        <category>遇到的问题</category>
        <category>Java</category>
        <category>github</category>
        <category>Wallpaper</category>
        <category>Python</category>
        <item>
            <guid isPermalink="true">https://yun2060.github.io/Others/%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3github%E7%9B%B4%E8%BF%9E%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
            <title>关于如何解决github直连失败的方法</title>
            <link>https://yun2060.github.io/Others/%E5%85%B3%E4%BA%8E%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3github%E7%9B%B4%E8%BF%9E%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%96%B9%E6%B3%95/</link>
            <category>教程</category>
            <category>github</category>
            <pubDate>Wed, 24 Jan 2024 21:53:54 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;介绍&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#介绍&#34;&gt;#&lt;/a&gt; 介绍&lt;/h2&gt;
&lt;p&gt;昨天一个朋友来问我有没有什么简单的方法能够直连 GitHub，对于我来说，我就是两种：使用软件 steam++ 和使用 clash 小猫来进行代理访问。&lt;/p&gt;
&lt;h2 id=&#34;watt-toolkitsteam简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#watt-toolkitsteam简介&#34;&gt;#&lt;/a&gt; Watt Toolkit (Steam++) 简介&lt;/h2&gt;
&lt;p&gt;Steam++ 现更名为 Watt Toolkit 并在 Microsoft Store 中已可用。&lt;br /&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zdGVhbXBwLm5ldC8=&#34;&gt;官方网址&lt;/span&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0JleW9uZERpbWVuc2lvbi9TdGVhbVRvb2xz&#34;&gt;开源地址&lt;/span&gt;&lt;br /&gt;
「Watt Toolkit」是一个开源跨平台的多功能 Steam 工具箱。这款开源软件使用 Titanium-Web-Proxy 开源项目进行本地反代，来实现加速。&lt;br /&gt;
&lt;img data-src=&#34;steam++.png&#34; alt=&#34;steam++&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;clash简介&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#clash简介&#34;&gt;#&lt;/a&gt; Clash 简介&lt;/h2&gt;
&lt;p&gt;Clash 是一个开源的代理工具，可用于代理访问网站。这种类似的代理工具还有很多，网上一搜便知，这里就不放出链接了。&lt;/p&gt;
&lt;h2 id=&#34;完结&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#完结&#34;&gt;#&lt;/a&gt; 完结&lt;/h2&gt;
&lt;p&gt;最后，其实网上还有很多教程教大家如何解决 github 直连失败的方法，互联网还是很强大的。有问题欢迎来评论区留言。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yun2060.github.io/Hexo/%E4%BD%BF%E7%94%A8hexo%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E6%96%B0%E6%96%87%E7%AB%A0/</guid>
            <title>使用hexo命令创建新文章</title>
            <link>https://yun2060.github.io/Hexo/%E4%BD%BF%E7%94%A8hexo%E5%91%BD%E4%BB%A4%E5%88%9B%E5%BB%BA%E6%96%B0%E6%96%87%E7%AB%A0/</link>
            <category>Hexo</category>
            <category>教程</category>
            <pubDate>Tue, 23 Jan 2024 14:41:10 +0800</pubDate>
            <description><![CDATA[ &lt;h2 id=&#34;224更新&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#224更新&#34;&gt;#&lt;/a&gt; 2.24 更新&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;hexo new --path &amp;quot;文章标题&amp;quot;&lt;/code&gt;  来创建新文章，这样可以直接对应路径下创建，而不需要拖入操作。&lt;/p&gt;
&lt;h2 id=&#34;使用hexo命令创建新文章&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用hexo命令创建新文章&#34;&gt;#&lt;/a&gt; 使用 hexo 命令创建新文章&lt;/h2&gt;
&lt;p&gt;之前一直都是直接创建文件夹的方式来写文章，但是会有各种各样的 bug。去网上搜了下发现直接使用 hexo 命令是最简单的方法，于是这次用 hexo 来创建新文章。&lt;/p&gt;
&lt;h3 id=&#34;使用命令&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用命令&#34;&gt;#&lt;/a&gt; 使用命令&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;hexo new &amp;quot;文章标题&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用说明&#34;&gt;#&lt;/a&gt; 使用说明&lt;/h3&gt;
&lt;p&gt;由于我有时会有图片说明，所以开启了 hexo 的资源引用功能。将_config.yml 中的 &lt;code&gt;post_asset_folder&lt;/code&gt;  设置为 &lt;code&gt;true&lt;/code&gt;  即可。&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;post_asset_folder&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token boolean important&#34;&gt;true&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样使用命令创建 md 文件的同时也会在 &lt;code&gt;source/_posts&lt;/code&gt;  文件夹下创建一个文件夹，文件夹名为 &lt;code&gt;文章标题&lt;/code&gt; 。之后我再将文件拖入对应的分类即可。&lt;br /&gt;
&lt;img data-src=&#34;docs.png&#34; alt=&#34;文件分布&#34; /&gt;&lt;br /&gt;
最后生成部署，一气呵成，但是应该有更便捷的方法，我暂时还不清楚😭，等之后再进行学习修改吧。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://yun2060.github.io/Others/%E6%8F%90%E5%8F%96wallpaper%E5%A3%81%E7%BA%B8/</guid>
            <title>提取wallpaper静态壁纸</title>
            <link>https://yun2060.github.io/Others/%E6%8F%90%E5%8F%96wallpaper%E5%A3%81%E7%BA%B8/</link>
            <category>教程</category>
            <category>Wallpaper</category>
            <pubDate>Mon, 22 Jan 2024 12:32:09 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;提取wallpaper静态壁纸&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提取wallpaper静态壁纸&#34;&gt;#&lt;/a&gt; 提取 wallpaper 静态壁纸&lt;/h1&gt;
&lt;p&gt;电脑配置很低，如果一直开着 WallpaperEngine 也是十分消耗资源，于是想着将好看的静态壁纸提取出来，上网搜了一下发现大家都在使用 repkg 来实现，于是就有了这篇文章。&lt;/p&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#准备工作&#34;&gt;#&lt;/a&gt; 准备工作&lt;/h2&gt;
&lt;p&gt;1. 下载 repkg，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL25vdHNjdWZmZWQvcmVwa2c=&#34;&gt;Github 链接&lt;/span&gt;。&lt;br /&gt;
&lt;img data-src=&#34;relese.png&#34; alt=&#34;release界面&#34; /&gt;&lt;br /&gt;
 2. 准备好需要提取的壁纸。&lt;/p&gt;
&lt;h2 id=&#34;使用步骤&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用步骤&#34;&gt;#&lt;/a&gt; 使用步骤&lt;/h2&gt;
&lt;p&gt;1. 把下载的 repkg.exe 放入一个空文件夹，可以在文件路径下新建一个输出文件夹，命名为 output。&lt;br /&gt;
&lt;img data-src=&#34;repkg.png&#34; alt=&#34;repkg文件夹&#34; /&gt;&lt;br /&gt;
 2. 在 repkg 文件夹下按住 shift 点击右键，打开 powershell。&lt;br /&gt;
&lt;img data-src=&#34;menu_expoler.png&#34; alt=&#34;文件管理右键菜单&#34; /&gt;&lt;br /&gt;
 3. 打开需要提取的壁纸文件夹，找到对应的 pkg 文件。&lt;br /&gt;
&lt;img data-src=&#34;menu_wallpaper.png&#34; alt=&#34;壁纸右键菜单&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;pkg.png&#34; alt=&#34;pkg文件&#34; /&gt;&lt;br /&gt;
 4. 在 powershell 中输入 &lt;code&gt;.\repkg.exe extract&lt;/code&gt; , 然后把 pkg 文件拖入 powershell 窗口中，补上命令 &lt;code&gt;-o .\output&lt;/code&gt;  后回车（注意箭头处要有空格）。&lt;br /&gt;
&lt;img data-src=&#34;powershell.png&#34; alt=&#34;powershell&#34; /&gt;&lt;br /&gt;
5. 成功后会在 output 文件夹下生成一个壁纸文件夹，里面有提取出来的壁纸。&lt;br /&gt;
&lt;img data-src=&#34;success.png&#34; alt=&#34;success&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;wallpaper.png&#34; alt=&#34;wallpaper&#34; /&gt;&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
